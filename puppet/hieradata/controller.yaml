# Hiera data here applies to all controller nodes
nova::api::enabled: true
nova::conductor::enabled: true
nova::consoleauth::enabled: true
nova::vncproxy::enabled: true
nova::scheduler::enabled: true

rabbitmq::delete_guest_user: false
rabbitmq::wipe_db_on_cookie_change: true
rabbitmq::port: '5672'
rabbitmq::package_source: undef
rabbitmq::repos_ensure: false

mongodb::server::replset: tripleo
mongodb::server::config: '/etc/mongod.conf'

redis::port: 6379
redis::sentinel::master_name: "%{hiera('bootstrap_nodeid')}"
redis::sentinel::redis_host: "%{hiera('bootstrap_nodeid_ip')}"
redis::sentinel::notification_script: '/usr/local/bin/redis-notifications.sh'

# service tenant
nova::api::admin_tenant_name: 'service'
glance::api::keystone_tenant: 'service'
glance::registry::keystone_tenant: 'service'
neutron::server::auth_tenant: 'service'
neutron::agents::metadata::auth_tenant: 'service'
cinder::api::keystone_tenant: 'service'
swift::proxy::authtoken::admin_tenant_name: 'service'
ceilometer::api::keystone_tenant: 'service'
heat::keystone_tenant: 'service'

#swift
swift::proxy::pipeline:
  - 'catch_errors'
  - 'healthcheck'
  - 'cache'
  - 'ratelimit'
  - 'tempurl'
  - 'formpost'
  - 'staticweb'
  - 'ceilometer'
  - 'authtoken'
  - 'keystone'
  - 'proxy-logging'
  - 'proxy-server'

swift::proxy::account_autocreate: true

# glance
glance::api::pipeline: 'keystone'
glance::registry::pipeline: 'keystone'
glance::registry::manage_service: true
glance::backend::swift::swift_store_create_container_on_put: true
glance::backend::rbd::rbd_store_user: 'openstack'

# neutron
neutron::core_plugin: 'ml2'
neutron::service_plugins:
  - 'neutron.services.l3_router.l3_router_plugin.L3RouterPlugin'
neutron::dhcp_agents_per_network: 2
neutron::plugins::ml2::tunnel_id_ranges:
  - '1:1000'
neutron::server::sync_db: true
neutron::agents::dhcp::dnsmasq_config_file: /etc/neutron/dnsmasq-neutron.conf

# nova
nova::notify_on_state_change: 'vm_and_task_state'
nova::api::osapi_v3: true

# cinder
cinder::scheduler::scheduler_driver: cinder.scheduler.filter_scheduler.FilterScheduler

# heat
heat::engine::heat_stack_user_role: ''
heat::engine::configure_delegated_roles: false
heat::engine::trusts_delegated_roles: []

# pacemaker
pacemaker::corosync::cluster_name: 'tripleo_cluster'
pacemaker::corosync::manage_fw: false

mysql::server::manage_config_file: true

tripleo::loadbalancer::keystone_admin: true
tripleo::loadbalancer::keystone_public: true
tripleo::loadbalancer::neutron: true
tripleo::loadbalancer::cinder: true
tripleo::loadbalancer::glance_api: true
tripleo::loadbalancer::glance_registry: true
tripleo::loadbalancer::nova_ec2: true
tripleo::loadbalancer::nova_osapi: true
tripleo::loadbalancer::nova_metadata: true
tripleo::loadbalancer::nova_novncproxy: true
tripleo::loadbalancer::mysql: true
tripleo::loadbalancer::rabbitmq: true
tripleo::loadbalancer::redis: true
tripleo::loadbalancer::swift_proxy_server: true
tripleo::loadbalancer::ceilometer: true
tripleo::loadbalancer::heat_api: true
tripleo::loadbalancer::heat_cloudwatch: true
tripleo::loadbalancer::heat_cfn: true

log_aggregation_sources:
  nova.api: { path: '/var/log/nova/nova-api.log' }
  nova.cert: { path: '/var/log/nova/nova-cert.log' }
  nova.conductor: { path: '/var/log/nova/nova-conductor.log' }
  nova.consoleauth: { path: '/var/log/nova/nova-consoleauth.log' }
  nova.scheduler: { path: '/var/log/nova/nova-scheduler.log' }

  neutron.openvswitch:
    multiline: false
    path: '/var/log/neutron/openvswitch-agent.log'

  neutron.server: { path: '/var/log/neutron/server.log' }
  neutron.dhcp: { path: '/var/log/neutron/dhcp-agent.log' }
  neutron.l3: { path: '/var/log/neutron/l3-agent.log' }
  neutron.metadata: { path: '/var/log/neutron/metadata-agent.log' }

  keystone: { path: '/var/log/keystone/keystone.log' }

  glance.api: { path: '/var/log/glance/api.log' }
  glance.registry: { path: '/var/log/glance/registry.log' }

  cinder.api: { path: '/var/log/cinder/api.log' }
  cinder.scheduler: { path: '/var/log/cinder/scheduler.log' }
  cinder.volume: { path: '/var/log/cinder/volume.log' }
